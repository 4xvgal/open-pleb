version: '3.8'

services:
  nutshell:
    image: cashubtc/nutshell:0.16.4
    container_name: nutshell
    ports:
      - "3338:3338"
    environment:
      MINT_LIGHTNING_BACKEND: FakeWallet
      MINT_INPUT_FEE_PPK: 0
      MINT_LISTEN_HOST: 0.0.0.0
      MINT_LISTEN_PORT: 3338
      MINT_PRIVATE_KEY: TEST_PRIVATE_KEY_OHH_YEAH_BABY
    command: poetry run mint
    networks:
      - postgres-network
    
  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: openpleb-backend
  #   restart: unless-stopped
  #   env_file: 
  #    - ${PWD}/data/config/backend/.env
  #   ports:
  #     - "3003:3003"
  #   volumes:
  #     - ${PWD}/data:/app/data
  #   networks:
  #     - postgres-network
  #   depends_on:
  #     - postgres
  #     - nutshell

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.frontend
  #   container_name: openpleb-frontend
  #   restart: unless-stopped
  #   env_file: 
  #    - ${PWD}/data/config/frontend/.env
  #   ports:
  #     - "3010:3000"
  #   networks:
  #     - postgres-network
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ${PWD}/data/config/frontend/.env:/app/data/config/frontend/.env
  # admin-frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.admin-frontend
  #   container_name: openpleb-admin-frontend
  #   restart: unless-stopped
  #   env_file: 
  #    - ${PWD}/data/config/frontend/.env
  #   ports:
  #     - "3011:3000"
  #   networks:
  #     - postgres-network
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ${PWD}/data/config/admin-frontend/.env:/app/data/config/admin-frontend/.env
      
  postgres:
    image: postgres:15.3
    container_name: my-postgres-db
    restart: unless-stopped
    env_file: 
     - ${PWD}/data/config/db/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ${PWD}/data/config/db/.env:/app/data/config/db/.env

      # Uncomment if you want to mount initialization scripts
      # - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
volumes:
  postgres-data:
    driver: local

networks:
  postgres-network:
    driver: bridge
