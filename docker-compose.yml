version: '3.8'

services:
  nutshell:
    image: cashubtc/nutshell:0.16.4
    container_name: nutshell
    ports:
      - "3338:3338"
    environment:
      MINT_LIGHTNING_BACKEND: FakeWallet
      MINT_INPUT_FEE_PPK: 100
      MINT_LISTEN_HOST: 0.0.0.0
      MINT_LISTEN_PORT: 3338
      MINT_PRIVATE_KEY: TEST_PRIVATE_KEY_OHH_YEAH_BABY
    command: poetry run mint
    networks:
      - postgres-network
    
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: openpleb-backend
    restart: unless-stopped
    environment:
      PORT: 3003
      DB_FILE_NAME: /app/data/local.db
      LOG_FILE_NAME: /app/data/logs/app.log
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      FRONTEND_URL: http://frontend:3000
      PUBLIC_PLATFORM_FEE_PERCENTAGE: 1
      PUBLIC_PLATFORM_FEE_FLAT_RATE: 100
      PUBLIC_TAKER_FEE_PERCENTAGE: 2
      PUBLIC_TAKER_FEE_FLAT_RATE: 100
      PUBLIC_MINT_URL: http://nutshell:3338
    ports:
      - "3003:3003"
    volumes:
      - backend-data:/app/data
    networks:
      - postgres-network
    depends_on:
      - postgres
      - nutshell

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: openpleb-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - postgres-network
    depends_on:
      - backend
      
  postgres:
    image: postgres:15.3
    container_name: my-postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Uncomment if you want to mount initialization scripts
      # - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Optional: Add pgAdmin for a web interface to manage the database
  pgadmin:
    image: dpage/pgadmin4:7.2
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgres-network
    depends_on:
      - postgres

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  backend-data:
    driver: local

networks:
  postgres-network:
    driver: bridge
